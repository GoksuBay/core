diff --git a/arch/x86/kernel/cpu/microcode/intel.c b/arch/x86/kernel/cpu/microcode/intel.c
index 65cbbcd..03d4c0f 100644
--- a/arch/x86/kernel/cpu/microcode/intel.c
+++ b/arch/x86/kernel/cpu/microcode/intel.c
@@ -532,7 +532,6 @@ static bool __init load_builtin_intel_microcode(struct cpio_data *cp)
 #endif
 }
 
-static __initdata char ucode_name[] = "kernel/x86/microcode/GenuineIntel.bin";
 static __init enum ucode_state
 scan_microcode(struct mc_saved_data *mcs, unsigned long *mc_ptrs,
 	       unsigned long start, unsigned long size,
@@ -540,22 +539,21 @@ scan_microcode(struct mc_saved_data *mcs, unsigned long *mc_ptrs,
 {
 	struct cpio_data cd;
 	long offset = 0;
-#ifdef CONFIG_X86_32
-	char *p = (char *)__pa_nodebug(ucode_name);
-#else
-	char *p = ucode_name;
-#endif
 
 	cd.data = NULL;
 	cd.size = 0;
 
 	/* try built-in microcode if no initrd */
-	if (!size) {
-		if (!load_builtin_intel_microcode(&cd))
-			return UCODE_ERROR;
-	} else {
+	if (load_builtin_intel_microcode(&cd))
+			start = 0;
+	 else {
+#ifdef CONFIG_BLK_DEV_INITRD
+		static __initdata char ucode_name[] = "kernel/x86/microcode/GenuineIntel.bin";
+		char *p = IS_ENABLED(CONFIG_X86_32) ? (char *)__pa_nodebug(ucode_name) : ucode_name;
+
 		cd = find_cpio_data(p, (void *)start, size, &offset);
 		if (!cd.data)
+#endif
 			return UCODE_ERROR;
 	}
 
